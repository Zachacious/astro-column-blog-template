---
import type {
  FrontmatterPage,
  IFrontmatter,
} from 'astro-boilerplate-components';
import { NewerOlderPagination, Section } from 'astro-boilerplate-components';

import BlogCard from '@/partials/BlogCard.astro';
import Base from '@/templates/Base.astro';
import { AppConfig } from '@/utils/AppConfig';

// import { PageHero } from '../../../partials/PageHero';
import Hero from '@/partials/Hero.astro';
import ContentTopBar from '@/partials/ContentTopBar.astro';

interface ITagFrontmatter extends IFrontmatter {
  tags: string[];
}

type GetStaticPaths = {
  paginate: any;
}; // Overrides `GetStaticPathsOptions` types from Astro

export async function getStaticPaths({ paginate }: GetStaticPaths) {
  const allPosts = await Astro.glob<ITagFrontmatter>('../../posts/*.md');
  const allTags = allPosts
    .map((post) => post.frontmatter?.tags)
    .flat()
    .filter((tag) => tag !== undefined);
  // const sortedPosts = sortByDate(allPosts);

  // Return a paginated collection of paths for all posts
  // return paginate(sortedPosts, { pageSize: 16 });

  return allTags.map((tag) => {
    const filteredPosts = allPosts.filter((post) =>
      post.frontmatter?.tags?.includes(tag)
    );

    return paginate(filteredPosts, {
      params: { tag },
      pageSize: 16,
    });
  });
}

interface Props {
  page: FrontmatterPage;
}

const { page } = Astro.props as Props;
const { tag } = Astro.params;
const titleSuffix = ` - ${AppConfig.site_name}`;
const titleBase = `Blog page ${page.currentPage}`;
const title = titleBase + titleSuffix;
const description =
  'Pagination example built with Astro styled with Tailwind CSS.';
---

<Base head={{ title, description }}>
  <div class="flex w-full flex-wrap">
    <div class="md:2/5 w-full lg:w-2/5">
      <Hero subtitle="Filed Under" title={tag} mode="page" />
    </div>
    <div class="md:2/5 h-screen w-full lg:w-3/5 lg:overflow-y-auto p-8">
      <ContentTopBar />
      <div class="my-10 flex w-full justify-center">
        <div class="flex max-w-7xl flex-wrap justify-center">
          {page.data.map((post) => <BlogCard post={post} />)}
        </div>
      </div>
      <Section>
        <NewerOlderPagination page={page} />
      </Section>
    </div>
  </div>


</Base>

---
// import "src/css/bloghero.scss";
import 'src/css/icon.scss';
import 'src/css/hero.scss';

import { Picture } from 'astro-imagetools/components';
import type { ReactNode } from 'react';
import SearchBtn from 'src/components/SearchBtn';

import SearchOverlay from '@/components/SearchOverlay';
import IconGithub from '@/icons/github';
import IconLinkedin from '@/icons/linkedin';
import type { PostFrontmatter } from '@/types/PostFrontmatter';

// interface IBlogFrontmatter extends IFrontmatter {
//   tags?: string[];
// }

type Props = {
  mode?: string;
  title?: string;
  subtitle?: string;
  frontmatter?: PostFrontmatter;
  children?: ReactNode;
};

const props = Astro.props as Props;

const bkimg = props.mode === 'post' ? props?.frontmatter?.imgSrc : '';

const allPosts = await Astro.glob<PostFrontmatter>('../pages/posts/*.md');
---

<script>
  (() => {
    const page = window.location.pathname.split('/').pop();

    if (page?.includes('search')) {
      const search = document.getElementById('search');
      const searchWrapper = document.getElementById('search-wrapper');

      sessionStorage.setItem('searchActive', 'false');

      const urlSearchParams = new URLSearchParams(window.location.search);
      const params = Object.fromEntries(urlSearchParams.entries());

      sessionStorage.setItem('searchActive', 'true');
      sessionStorage.setItem('searchTerm', params?.s ?? '');

      search?.classList.remove('opacity-0');
      search?.classList.add('fade-in');
      searchWrapper?.classList.remove('hidden');

      const searchText = document.getElementById('search-title');
      if (searchText) searchText.innerText = params?.s || 'Search';
    }
  })();
</script>

<section
  class="border-accent drop-shadow-[0_15px_15px_rgba(0,0,0,0.5)] md:h-screen"
>
  <div class="hero flex justify-center p-8 md:h-full">
    <div class="hero-bk-img-wrapper absolute top-0 left-0 h-full w-full">
      {bkimg && <Picture src={bkimg} alt="ZachMoore.dev" />}
    </div>
    {
      (props.mode === 'post' || props.mode === 'page') && (
        <div class="bloghero__overlay absolute bg-textdark  dark:bg-primarydark" />
      )
    }
    <div
      id="main-overlay"
      class={`bloghero__overlay absolute bg-textdark dark:bg-primarydark ${
        props.mode !== 'search' && 'opacity-0'
      }`}
    >
    </div>
    <div class="z-0 mx-4 flex w-full max-w-7xl flex-col">
      <div class="w-full">
        <div class="navbar my-5 flex w-full items-center justify-between px-2">
          <div></div>
          <h1 class="block">
            <div class="text-4xl font-normal">
              <a href="/">ZACH<span class="font-bold">MOORE</span></a>
            </div>
            <div class="flex justify-end text-sm uppercase">
              <div style="width: 18px"><IconGithub /></div>
              <div class="">
                <a href="https://github.com/Zachacious">Github</a>
              </div>
              <div class="mx-1"></div>
              <div style="width: 18px"><IconLinkedin /></div>
              <div class="">
                <a href="https://linkedin.com/in/zachmoore1">LinkedIn</a>
              </div>
            </div>
          </h1>
          <!-- <div class="hidden lg:block">
            <ThemeToggle client:only="react" />
          </div> -->
        </div>
      </div>
      <div
        class="hero-footer break-word z-0 mb-12 flex w-full grow items-start"
      >
        <div
          id="please-subscribe"
          class="flex h-full w-full flex-wrap items-center justify-end"
        >
          <div class="w-5/6">
            <h2 class="my-4 w-full text-right text-4xl font-bold">
              Most Excellent Dudes & Dudettes
            </h2>
            <div class="text-right">
              If you'd like to support my work, please <span class="text-boom"
                >share</span
              > my content & <span class="text-boom">SUBSCRIBE</span> to stay up
              to date with my latest posts!
            </div>
          </div>
        </div>
        <div id="search-wrapper" class="mt-8 hidden w-full">
          <SearchOverlay id="search" posts={allPosts} client:load />
        </div>
      </div>
      <div id="title" class="flex w-full justify-end py-10">
        <div class="flex flex-wrap justify-end">
          <div class="w-full text-right">
            {props.mode === 'search' && <div>Results For</div>}
            {props?.subtitle && <div>{props?.subtitle}</div>}
          </div>

          <h1
            class="post-title text-right text-5xl font-bold capitalize text-primarydark dark:text-textdark md:text-7xl"
          >
            {
              props.mode === 'search' ? (
                <div id="search-title" class="">
                  Search
                </div>
              ) : props.mode === 'post' ? (
                props?.frontmatter?.title
              ) : props?.title ? (
                props?.title
              ) : (
                'Blog'
              )
            }
          </h1>
          {
            props.mode === 'post' && (
              <div class="mt-2 flex w-full flex-wrap justify-end text-right">
                {props?.frontmatter?.tags?.map((tag) => (
                  <a
                    href={`/tag/${tag}/1`}
                    class="inline-block px-2 py-1 text-lg font-bold capitalize opacity-60"
                  >
                    #{tag}
                  </a>
                ))}
              </div>
            )
          }
        </div>
      </div>
    </div>
  </div>

  <div class="left-toolbar-wrapper">
    <div class="left-toolbar my-8 flex flex-col flex-wrap items-center">
      {
        props.mode !== 'search' && (
          <div class="left-button my-2 rounded-r-md bg-accent p-4 drop-shadow-md">
            <SearchBtn client:load />
          </div>
        )
      }
    </div>
  </div>
</section>

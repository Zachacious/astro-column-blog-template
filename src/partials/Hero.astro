---
// import "src/css/bloghero.scss";
import "src/css/icon.scss";

import "src/css/hero.scss";

import SearchBtn from "src/partials/SearchBtn";
import Search from "@/partials/SearchOverlay";
import { IFrontmatter } from "astro-boilerplate-components";
import { ReactNode } from "react";

interface IBlogFrontmatter extends IFrontmatter {
  tags?: string[];
}

type Props = {
  mode?: string;
  title?: string;
  subtitle?: string;
  frontmatter?: IBlogFrontmatter;
  children?: ReactNode;
};

const props = Astro.props as Props;

const style =
  props.mode === "post"
    ? `background: url(${props?.frontmatter?.imgSrc}) no-repeat center center fixed; background-size: cover;`
    : "";
const allPosts = await Astro.glob<IBlogFrontmatter>("../pages/posts/*.md");

const onClickSearch = () => {
  const overlay = document.getElementById("main-overlay");
  const search = document.getElementById("search");
  const searchWrapper = document.getElementById("search-wrapper");
  const title = document.getElementById("title");

  if (overlay?.classList.contains("active")) {
    overlay?.classList.remove("active");
    overlay?.classList.remove("fade-in");
    overlay?.classList.add("fade-out");

    search?.classList.remove("active");
    search?.classList.remove("fade-in");
    search?.classList.add("fade-out");

    title?.classList.remove("fade-out");
    title?.classList.add("fade-in-full");
    title?.classList.remove("hidden");

    search?.classList.add("pointer-events-none");
    searchWrapper?.classList.add("hidden");

    // sessionStorage.setItem('searchActive', 'false');
  } else {
    overlay?.classList.add("active");
    overlay?.classList.add("fade-in");
    overlay?.classList.remove("fade-out");
    overlay?.classList.remove("opacity-0");

    search?.classList.add("active");
    search?.classList.add("fade-in");
    search?.classList.remove("fade-out");
    search?.classList.remove("opacity-0");
    searchWrapper?.classList.remove("hidden");

    title?.classList.remove("fade-in-full");
    title?.classList.add("fade-out");
    title?.classList.add("hidden");

    search?.classList.remove("pointer-events-none");

    // sessionStorage.setItem('searchActive', 'true');
  }
};
---

<script>
  (() => {
    const page = window.location.pathname.split("/").pop();

    if (page?.includes("search")) {
      const search = document.getElementById("search");
  const searchWrapper = document.getElementById("search-wrapper");

      sessionStorage.setItem("searchActive", "false");

      const urlSearchParams = new URLSearchParams(window.location.search);
      const params = Object.fromEntries(urlSearchParams.entries());

      sessionStorage.setItem("searchActive", "true");
      sessionStorage.setItem("searchTerm", params?.s ?? "");

      search?.classList.remove("opacity-0");
      search?.classList.add("fade-in");
      searchWrapper?.classList.remove("hidden");

      const searchText = document.getElementById("search-title");
      if (searchText) searchText.innerText = params?.s || "Search";
    }
  })();
</script>

<section class=" md:h-screen drop-shadow-[0_15px_15px_rgba(0,0,0,0.5)] border-accent">
  <div style={style} class="hero flex justify-center p-8 md:h-full">
    {(props.mode === "post" || props.mode ==="page") && (
      <div class="bloghero__overlay absolute bg-textdark  dark:bg-primarydark" />
    )}
    <div
      id="main-overlay"
      class={`bloghero__overlay absolute bg-textdark dark:bg-primarydark ${
        props.mode !== "search" && "opacity-0"
      }`}
    >
    </div>
    <div class="z-0 mx-4 flex w-full max-w-7xl flex-col">
      <div class="w-full">
        <div class="navbar my-5 flex w-full items-center justify-between px-2">
          <div
            class="navbar-brand text-2xl font-bold text-primarydark dark:text-textdark"
          >
            Zach Moore
          </div>
          <div class="flex items-center cursor-pointer">
            {props.mode !== "search" && (
              <SearchBtn onClick={onClickSearch} client:load />
            )}
          </div>
        </div>
      </div>
      {/* <div class="hero-content z-0 grow"></div> */}
      <div
        class="hero-footer w-full break-word z-0 mb-12 flex grow items-center  "
      >
        <div id="search-wrapper" class="hidden">
          <Search
          id="search"
          className="pointer-events-none"
          posts={allPosts}
          client:load
        />
        </div>
      </div>
      <div id="title" class="py-10 flex justify-end w-full ">
        <div class="flex justify-end flex-wrap">
          {props.mode === "search" && <div>Results For</div>}
          {props?.subtitle && <div>{props?.subtitle}</div>}
          <h1
            class="post-title text-right w-full text-primarydark dark:text-textdark  text-5xl font-bold capitalize md:text-7xl"
          >
            {props.mode === "search" ? (
              <div id="search-title" class="">
                Search
              </div>
            ) : props.mode === "post" ? (
              props?.frontmatter?.title
            ) : props?.title ? (props?.title) : (
              "Blog"
            )}
          </h1>
          {props.mode === "post" && (
            <div class="w-full flex flex-wrap justify-end text-right mt-2">
              {props?.frontmatter?.tags?.map((tag) => (
                <a
                  href={`/tag/${tag}/1`}
                  class="inline-block font-bold px-2 py-1 capitalize text-lg opacity-60"
                >
                  #{tag}
                </a>
              ))}
            </div>
          )}
        </div>
      </div>
    </div>
  </div>
</section>
